class Solution {
    public void solve(int i,int j,int[] count,int[] di,int[] dj,int m,int n,int[][] visited){
        if(i==m-1 && j==n-1){
            count[0]++;
            return;
        }
        for(int k=0;k<2;k++){
            int nexti=i+di[k];
            int nextj=j+dj[k];
            if(nexti>=0 && nextj>=0 && nexti<m && nextj<n && visited[nexti][nextj] ==-1){
                visited[i][j]=1;
                solve(nexti,nextj,count,di,dj,m,n,visited);
                visited[i][j]=-1;
            }
        }
    } 
    public int uniquePaths(int m, int n) {
        int[][] visited= new int[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                visited[i][j]=-1;
            }
        }
        int[] count={0};
        int[] di={1,0};
        int[] dj={0,1};
        solve(0,0,count,di,dj,m,n,visited);
        return count[0];
    }
}
